package src.main;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author M0riz
 */

import fichiersreu.Compterendu;
import fichiersreu.Ordredujour;
import javax.swing.*;
import java.awt.event.KeyEvent;
import java.util.*;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import java.util.ArrayList;
import javax.swing.JCheckBox;
import src.Modif.ModifRéunion;
import src.créer.CréerRéunion;

import java.io.IOException;
import java.time.temporal.ChronoUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import static src.main.Main.PathApp;


public class MainReunion extends javax.swing.JFrame {

    /**
     * Creates new form MainReunion
     */
    
    public Vector<Integer> ele_selec = new Vector<Integer>();
    private int y=50;
    private int x=50;
    
    
    private boolean param_recherche = false;
    
    public MainReunion() {
        initComponents();
        AllReunions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_creer = new javax.swing.JButton();
        champ_recherche = new javax.swing.JTextField();
        listreu = new javax.swing.JPanel();
        btnmodif = new javax.swing.JButton();
        btnsupp = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btn_refresh = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion des réunions");

        btn_creer.setText("Créer une réunion");
        btn_creer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_creerActionPerformed(evt);
            }
        });

        champ_recherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champ_rechercheActionPerformed(evt);
            }
        });
        champ_recherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                champ_rechercheKeyReleased(evt);
            }
        });

        listreu.setBackground(new java.awt.Color(255, 255, 255));
        listreu.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                listreuComponentAdded(evt);
            }
        });

        javax.swing.GroupLayout listreuLayout = new javax.swing.GroupLayout(listreu);
        listreu.setLayout(listreuLayout);
        listreuLayout.setHorizontalGroup(
            listreuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 905, Short.MAX_VALUE)
        );
        listreuLayout.setVerticalGroup(
            listreuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
        );

        btnmodif.setText("Modifier");
        btnmodif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodifActionPerformed(evt);
            }
        });

        btnsupp.setText("Supprimer");
        btnsupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuppActionPerformed(evt);
            }
        });

        jLabel2.setText("Date : ");

        jLabel1.setText("Liste des réunions :");

        btn_refresh.setText("Rafrachir");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_refresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(227, 227, 227)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(champ_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(listreu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(29, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(btnmodif)
                .addGap(188, 188, 188)
                .addComponent(btn_creer, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnsupp)
                .addGap(82, 82, 82))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(champ_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_refresh)
                        .addGap(26, 26, 26)))
                .addComponent(listreu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsupp)
                    .addComponent(btnmodif)
                    .addComponent(btn_creer))
                .addGap(78, 78, 78))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Réunions");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Types");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Groupes");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Contacts");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuppActionPerformed
        //Confirmer suppression 
        /*
        ConfSupp Aff = new ConfSupp();
        Aff.setVisible(true);
        Aff.setLocationRelativeTo(null);*/
        
        Bdd bdd = new Bdd();
        

        bdd.supprimerReunion(ele_selec);
        listreu.removeAll();
        AllReunions();
    }//GEN-LAST:event_btnsuppActionPerformed

    private void btnmodifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodifActionPerformed
        System.out.println("clique sur bouton modifier");
        
        ModifRéunion Aff = new ModifRéunion();
        Aff.setVisible(true);
        Aff.setLocationRelativeTo(null);
        
        Bdd bdd = new Bdd();
        ArrayList<Reunions> liste = bdd.getOneReu(ele_selec.get(0));
        
        System.out.println("taille de la liste " + liste.size());
        
        int id_reu = liste.get(0).getId();
        String nom_reu = liste.get(0).getNom();
        int type_reu = liste.get(0).getId_type();
        String lieu_reu = liste.get(0).getLieu();
        String date_reu = liste.get(0).getDate();
        String heure_reu = liste.get(0).getHeure();
        boolean perio_reu  = liste.get(0).getPeriodique();
        int semaines_reu = liste.get(0).getPeridiocite();
       
        Aff.Affichage(id_reu,nom_reu,type_reu,lieu_reu,date_reu,heure_reu,perio_reu,semaines_reu);
        
    }//GEN-LAST:event_btnmodifActionPerformed

    private void listreuComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_listreuComponentAdded

    }//GEN-LAST:event_listreuComponentAdded

    private void champ_rechercheKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_champ_rechercheKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_ENTER)
        {
            System.out.println("appui sur la touche entrée");
            
            listreu.removeAll();
            listreu.repaint();
            
            String date = champ_recherche.getText();
            System.out.println("date saisie : " + date);
            
            if (!date.equals("")){

            Bdd bdd= new Bdd();

            ArrayList<Reunions> liste_reunions = bdd.allReunion(date);

            System.out.println("taille de la liste : " + liste_reunions.size());
            
            AffichageReunion(liste_reunions);
            }
        }
        
    }//GEN-LAST:event_champ_rechercheKeyReleased

    private void champ_rechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champ_rechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_champ_rechercheActionPerformed

    private void btn_creerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_creerActionPerformed
        CréerRéunion Aff = new CréerRéunion();
        Aff.setVisible(true);
        Aff.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_btn_creerActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        MainType Aff = new MainType();
        Aff.setLocationRelativeTo(null);
        Aff.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        MainGroupe Aff = new MainGroupe();
        Aff.setLocationRelativeTo(null);
        Aff.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        MainPersonne Aff = new MainPersonne();
        Aff.setLocationRelativeTo(null);
        Aff.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu4MouseClicked

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        
        listreu.removeAll();
        y=50;
        x=50;
        AllReunions();
    }//GEN-LAST:event_btn_refreshActionPerformed
    
    
    public void selectOptions(Map<Integer, JCheckBox> check_reu){

               Bdd bdd = new Bdd();
               ArrayList<Reunions> liste = bdd.allReunion("");
               
                ele_selec.clear();
                
		check_reu.entrySet().stream().filter(e-> e.getValue().isSelected())
		          .forEach(e-> ele_selec.add(liste.get(e.getKey()).getId()));
                                
                
                if (ele_selec.size()<1)
                    btnmodif.setEnabled(false);
                else if (ele_selec.size()==1){
                    btnmodif.setEnabled(true);
                    btnsupp.setEnabled(true);
                }
                else{
                    btnsupp.setEnabled(true);
                    btnmodif.setEnabled(false);
                }
    }
   
    
        
    public void AllReunions(){
        btnsupp.setEnabled(false);
        btnmodif.setEnabled(false);
        
        Bdd bdd= new Bdd();
        ArrayList<Reunions> liste = bdd.allReunion("");
        AffichageReunion(liste);
    }
    
    
    public void AffichageReunion(ArrayList<Reunions> liste){
        
        Map<Integer, JCheckBox> check_reu = new HashMap<Integer, JCheckBox>() ;
        
        
        for (int i=0;i<liste.size();++i)
        {
            final int l=i;

           String date_reu = liste.get(i).getDate();
           String nom_reu = liste.get(i).getNom();
           int id_reu= liste.get(i).getId();
           
            if(!date_reu.equals("")){ 
                
                //appel de la fonction
                boutons(date_reu,nom_reu,check_reu,l,id_reu);
               
            }//ferme le grand if
            else{
                sup_quinze(nom_reu,check_reu,l);
                
                System.out.println("faire affichage normal");
            }

        }
    }
    
    public void boutons(String date_reu,String nom_reu, Map<Integer, JCheckBox> check_reu,int l,int id_reu){
        
        DateTimeFormatter dtf;
        dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        LocalDate current_date = LocalDate.now();
        System.out.println(current_date);  
        
        
        LocalDate d_date_reu = LocalDate.parse(date_reu, dtf);
        long daysBetween = 0;
        daysBetween = ChronoUnit.DAYS.between(current_date, d_date_reu);
            
        System.out.println("comparaison des dates : " + daysBetween);
        
        if (daysBetween < 0 && daysBetween > -9){
            compte_rendu(nom_reu,check_reu,l);
        }
        else if(daysBetween > 0){
            ordre_du_jour(nom_reu,check_reu,l,id_reu);
        }
        else if (daysBetween < -9){
                System.out.println("a supprimer");
                Bdd bdd = new Bdd();
                bdd.supprimerUneReunion(id_reu);
        }
        /*
        else if (daysBetween > 15){
            sup_quinze(nom_reu,check_reu,l);
        }*/
        
        
    }
    
    public void sup_quinze(String nom_reu,Map<Integer, JCheckBox> check_reu,int l){
        JLabel label1=new JLabel();
        JCheckBox check = new JCheckBox(nom_reu);
        check_reu.put(l, check);
        check.setText(nom_reu);
                
        label1.setBounds(100,y,500,30);
        check.setBounds (30,y,200,30);
            
        check.addActionListener((ActionEvent e) -> {
                selectOptions(check_reu);
            });
            

            listreu.add(label1);
            listreu.add(check);

            x+=30;
            y+=30;
            
        listreu.repaint();
            
    }
    
    public void ordre_du_jour(String nom_reu,Map<Integer, JCheckBox> check_reu,int l,int id){
                JLabel label1=new JLabel();
                JCheckBox check = new JCheckBox(nom_reu);
                check_reu.put(l, check);
                check.setText(nom_reu);
                
                Bdd bdd= new Bdd();
                ArrayList<Reunions> liste = bdd.allReunion("");
        
                String[] liste_fichier = new File(PathApp+"\\Pdf").list();

                boolean BddExist = false;
                String init_ = "";
                String file = "Convocation_" + liste.get(l).getNom() + ".pdf";
                System.out.println("file " + file);
                for (int i=0; i<liste_fichier.length; i++){
                    if(liste_fichier[i].equals(file)){
                       BddExist = true;
                       break;
                    }    
                }
                
                JButton btn_odj = new JButton("");
                JButton btn_envoi = new JButton("");
                if(BddExist==true){
                    btn_odj = new JButton("Modifier l'ordre du jour");
                    btn_odj.addActionListener(new ActionListener() { 
                    public void actionPerformed(ActionEvent e) { 
                    String nom = liste.get(l).getNom();
                    int id = liste.get(l).getId();
                    Ordredujour aff = new Ordredujour(nom,id);
                    aff.setLocationRelativeTo(null);
                    aff.setVisible(true);


                    } 
                    } );
                    
                    btn_envoi = new JButton("Envoyer l'ordre du jour");
                    btn_envoi.setBounds(500,y,200,30);
                    btn_envoi.addActionListener(new ActionListener() { 
                    public void actionPerformed(ActionEvent e) { 
                    try {
                        SendMail envoi = new SendMail("Ordre-du-jour",ele_selec.get(0));
                    } 
                    catch (IOException ex) {
                        Logger.getLogger(MainReunion.class.getName()).log(Level.SEVERE, null, ex);
                    }
                  } 
                } );
                    
                }
                else{
                    btn_odj = new JButton("Rédiger l'ordre du jour");
                    btn_odj.addActionListener(new ActionListener() { 
                    public void actionPerformed(ActionEvent e) { 
                    String nom = liste.get(l).getNom();
                    int id = liste.get(l).getId();
                    Ordredujour aff = new Ordredujour(nom,id);
                    aff.setLocationRelativeTo(null);
                    aff.setVisible(true);
                    }
                    });
                    
                    btn_envoi = new JButton("Envoyer l'ordre du jour");
                    
                }
               
                

                
                
                System.out.println("ecrire ordre du jour ");
                btn_odj.setBounds(200,y,200,30);

               
                
                
                
                label1.setBounds(100,y,500,30);
            check.setBounds (30,y,200,30);
            
            check.addActionListener((ActionEvent e) -> {
                selectOptions(check_reu);
            });
            

            listreu.add(label1);
            listreu.add(btn_odj);
            listreu.add(btn_envoi);
            listreu.add(check);
            

            x+=30;
            y+=30;
            
            listreu.repaint();
            
    }
    
    public void compte_rendu(String nom_reu,Map<Integer, JCheckBox> check_reu,int l){
        
         JLabel label1=new JLabel();
         JCheckBox check = new JCheckBox(nom_reu);
         check_reu.put(l, check);
         check.setText(nom_reu);
         
        Bdd bdd= new Bdd();
        ArrayList<Reunions> liste = bdd.allReunion("");
        
        String[] liste_fichier = new File(PathApp+"\\Pdf").list();
        
        boolean BddExist = false;
        String init_ = "";
        String file = "CompteRendu_" + liste.get(l).getNom() + ".pdf";
        System.out.println("file " + file);
        for (int i=0; i<liste_fichier.length; i++){
            if(liste_fichier[i].equals(file)){
               BddExist = true;
               break;
	    }    
        }
        
        System.out.println(BddExist);
        
        JButton btn_compte  = new JButton();
        JButton envoi = new JButton();
        
        if(BddExist==true){
            btn_compte = new JButton("Modifier le compte-rendu");
            btn_compte.setBounds(200,y,200,30);


            btn_compte.addActionListener(new ActionListener() { 
            public void actionPerformed(ActionEvent e) { 
            String nom = liste.get(l).getNom();
            int id = liste.get(l).getId();
            Compterendu aff = new Compterendu(nom,id);
            aff.setLocationRelativeTo(null);
            aff.setVisible(true);


            } 
            } );
            
            
            envoi = new JButton("Envoyer le compte-rendu");
            envoi.setBounds(500,y,200,30);
            envoi.addActionListener(new ActionListener() { 
            public void actionPerformed(ActionEvent e) { 
            try {
                SendMail envoi = new SendMail("Compte-rendu",ele_selec.get(0));
            }
            catch (IOException ex) {
                Logger.getLogger(MainReunion.class.getName()).log(Level.SEVERE, null, ex);
            }
          } 
        } );
        }
        else{
            btn_compte = new JButton("Rédiger le compte-rendu");
            btn_compte.setBounds(200,y,200,30);


            btn_compte.addActionListener(new ActionListener() { 
            public void actionPerformed(ActionEvent e) { 
            String nom = liste.get(l).getNom();
            int id = liste.get(l).getId();
            Compterendu aff = new Compterendu(nom,id);
            aff.setLocationRelativeTo(null);
            aff.setVisible(true);


            } 
            } );
            
            
        }

            label1.setBounds(100,y,500,30);
            check.setBounds (30,y,200,30);
            
            check.addActionListener((ActionEvent e) -> {
                selectOptions(check_reu);
            });
            
            listreu.add(envoi);
            listreu.add(label1);
            listreu.add(btn_compte);
            listreu.add(check);

            x+=30;
            y+=30;
            
            listreu.repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainReunion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainReunion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainReunion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainReunion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainReunion().setVisible(true);
            }
        });
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_creer;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btnmodif;
    private javax.swing.JButton btnsupp;
    private javax.swing.JTextField champ_recherche;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel listreu;
    // End of variables declaration//GEN-END:variables
}
